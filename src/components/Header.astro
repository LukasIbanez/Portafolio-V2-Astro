---
// Aquí no necesitamos importar nada ya que no usamos React
---

<header class="fixed z-[100] top-0 left-0 w-full mx-[1%] mt-[1%]">
    <div class="flex">
      <div class="fixed z-[100] left-20 h-12 flex justify-center items-center">
        <p class="text-3xl mr-6 text-change-color-header text-[#fffce1]">|</p>
        <p class="text-3xl text-header-name text-change-color-header text-[#fffce1]"> L. Ibáñez</p>
      </div>
      <button
        id="hamburger-btn"
        class="group fixed z-[100] inline-flex w-12 h-12 text-[#fffce1] group-[aria-pressed=true]:text-white text-center items-center justify-center hover:cursor-pointer hover:shadow-[0_1px_0_theme(colors.slate.950/.04),0_4px_8px_theme(colors.slate.950/.12),inset_0_-2px_0_theme(colors.slate.950/.04)] transition"
        aria-pressed="false"
      >
        <span class="sr-only">Menu</span>
        <svg
          class="w-6 h-6 fill-current pointer-events-none"
          viewBox="0 0 16 16"
          xmlns="http://www.w3.org/2000/svg"
        >
          <rect
            class="origin-center -translate-y-[5px] translate-x-[7px] transition-all duration-300 ease-[cubic-bezier(.5,.85,.25,1.1)] group-[[aria-pressed=true]]:translate-x-0 group-[[aria-pressed=true]]:translate-y-0 group-[[aria-pressed=true]]:rotate-[315deg]"
            y="7"
            width="9"
            height="2"
            rx="1"
          ></rect>
          <rect
            class="origin-center transition-all duration-300 ease-[cubic-bezier(.5,.85,.25,1.8)] group-[[aria-pressed=true]]:rotate-45"
            y="7"
            width="16"
            height="2"
            rx="1"
          ></rect>
          <rect
            class="origin-center translate-y-[5px] transition-all duration-300 ease-[cubic-bezier(.5,.85,.25,1.1)] group-[[aria-pressed=true]]:translate-y-0 group-[[aria-pressed=true]]:rotate-[135deg]"
            y="7"
            width="9"
            height="2"
            rx="1"
          ></rect>
        </svg>
      </button>
    </div>
  
    <div
      id="menu"
      class="fixed z-50 top-0 left-0 w-full h-full bg-[#fffce1] bg-opacity-90 flex items-center justify-center transition-opacity duration-300 ease-in-out opacity-0 menu-transition"
    >
      <nav class="text-black text-center w-1/3">
        <p class="text-with-lines">Lukas Ibáñez Villagrán</p>
        <ul>
          <li><a href="#home" class="block py-2">Home</a></li>
          <li><a href="#services" class="block py-2">Services</a></li>
          <li><a href="#about" class="block py-2">About</a></li>
          <li><a href="#contact" class="block py-2">Contact</a></li>
        </ul>
      </nav>
    </div>
  </header>
  
  <style>
    @import url('https://fonts.googleapis.com/css2?family=Catamaran:wght@100..900&family=Norican&display=swap');
  
    .text-header-name {
      font-family: "Norican", cursive;
      font-weight: 400;
      font-style: normal;
    }
  
    .text-with-lines {
      position: relative;
      text-align: center;
      display: inline-block;
    }
  
    .text-with-lines::before,
    .text-with-lines::after {
      content: '';
      position: absolute;
      top: 50%;
      width: 100%;
      height: 2px;
      background-color: currentColor;
    }
  
    .text-with-lines::before {
      left: -105%;
      transform: translateY(-50%);
    }
  
    .text-with-lines::after {
      right: -105%;
      transform: translateY(-50%);
    }
  
    .menu-transition {
      clip-path: circle(0% at 0% 0%);
      transition: clip-path 1.0s cubic-bezier(0.2, 0.8, 0.2, 1), opacity 0.8s ease-in-out;
    }
  
    .menu-transition.show {
      clip-path: circle(150% at 0% 0%);
      opacity: 1;
    }
  </style>
  
  <script>
    document.addEventListener('DOMContentLoaded', () => {
      const hamburgerBtn = document.getElementById('hamburger-btn');
      const txtHeaders = document.getElementsByClassName('text-change-color-header');
      const menu = document.getElementById('menu');
  
      if (hamburgerBtn && menu) {
        hamburgerBtn.addEventListener('click', () => {
          const isOpen = hamburgerBtn.getAttribute('aria-pressed') === 'true';
          hamburgerBtn.setAttribute('aria-pressed', isOpen ? 'false' : 'true');
          hamburgerBtn.classList.toggle('text-[#fffce1]', isOpen);
          hamburgerBtn.classList.toggle('text-black', !isOpen);
  
          Array.from(txtHeaders).forEach(txtHeader => {
            txtHeader.classList.toggle('text-[#fffce1]', isOpen);
            txtHeader.classList.toggle('text-black', !isOpen);
          });
  
          if (isOpen) {
            menu.classList.remove('show');
            setTimeout(() => {
              menu.classList.add('hidden');
            }, 500); // Tiempo de la transición
          } else {
            menu.classList.remove('hidden');
            setTimeout(() => {
              menu.classList.add('show');
            }, 10);
          }
        });
      }
    });
  </script>